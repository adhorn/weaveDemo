---
- hosts: all
  become: yes
  become_user: root

  vars:
    jobspath: /var/lib/nomad/jobs
    netmanpath: /usr/bin/netman
    networks:
      - internal
      - external
      - secure
      - backoffice

  tasks:
    - name: ensure netman script is present
      copy: src=files/netman.sh dest={{ netmanpath }}

    - name: ensure netman script is executable
      file: path={{ netmanpath }} mode="a+x"

    # TODO: Only notify change when the networks are actually created
    - name: ensure networks are created
      shell: >
        if [ $(docker network ls | grep {{ item }} | wc -l) -eq 0 ]
          then
            docker network create -d weave {{ item }}
          else
            echo "noop"
        fi
      register: networkcreation
      with_items: "{{ networks }}"

    - name: ensure weavedemo job file is present
      copy: src=files/service.nomad dest={{ jobspath }}/weavedemo.nomad
      register: weavejobfile

    - name: ensure netman job file is present
      copy: src=files/netman.nomad dest={{ jobspath }}/netman.nomad
      register: netmanjobfile

    - name: check status of weavedemo job
      shell: nomad status | grep webservice | wc -l
      register: weavejobcheck
      changed_when: no

    - name: check status of weavedemo job
      shell: nomad status | grep webservice | wc -l
      register: netmanjobcheck
      changed_when: no

    - name: sanity check for nomad jobs
      command: nomad validate {{ jobspath }}/{{ item }}.nomad
      with_items:
        - weavedemo
        - netman

    - name: ensure weavedemo job is running
      command: nomad run {{ jobspath }}/weavedemo.nomad
      when: weavejobfile.changed or weavejobcheck.stdout == '0'

    - name: ensure netman job is running
      command: nomad run {{ jobspath }}/netman.nomad
      when: netmanjobfile.changed or netmanjobcheck.stdout == '0'
